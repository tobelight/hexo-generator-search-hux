[{"title":"Windows 清除 DNS 缓存","subtitle":"Windows 清除 DNS 缓存命令","url":"/2024/dns-clear/","content":"\nWindows 清除 DNS 缓存命令\n\n<!--more-->\n\n```bash\n# 清空 dns\n$ ipconfig /flushdns\n\n# 查看 dns\n$ ipconfig /displaydns\n```\n","tags":["windows","ipconfig","dns"]},{"title":"使用 Hexo 搭建博客","subtitle":"No Subtitle","url":"/hello-world/","content":"\n作为一名 [INFJ-A](https://www.16personalities.com/ch/infj-%E4%BA%BA%E6%A0%BC)，我一直渴望拥有一个可以记录分享自己想法和作品的平台。经过一番探索，我最终选择了使用 Hexo 作为我的博客搭建工具。Hexo 以其简洁优雅的风格和强大的功能吸引了我，并帮助我顺利搭建了自己的博客。\n\n<!--more-->\n\n在搭建博客的过程中，我遇到了一些需要解决的细节问题，也对一些默认配置进行了个性化调整。本文将记录我的搭建过程，并分享一些个人经验和建议，希望能对想要使用 Hexo 搭建博客的朋友有所帮助。\n\n——**上面的内容由 [AI](https://gemini.google.com/) 生成，万事开头难，哈哈哈**\n\n## 搭建博客\n\n### 环境准备\n\n1. [Node.js](https://nodejs.org/en/download/package-manager)\n2. [Hexo](https://hexo.io/zh-cn/docs/)\n\n```bash\n# 全局安装 hexo 命令工具\n$ npm install -g hexo-cli\n# 在空文件夹下初始化\n$ hexo init\n# 启动本地服务器，查看 Hello World\n$ hexo server\n```\n\n### 部署到 Github Page\n\n参考 [在 GitHub Pages 上部署 Hexo](https://hexo.io/zh-cn/docs/github-pages)\n\n1. 在 Github 上创建 `<你的 GitHub 用户名>.github.io` 的仓库\n2. 将 Hexo 文件夹中的文件 push 到储存库的默认分支\n3. 在储存库中建立 `.github/workflows/pages.yml`，并填入下面内容，再推送到 Github 上\n\n```yml .github/workflows/pages.yml\nname: Pages\n\non:\n  push:\n    branches:\n      - main # default branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 20\n        uses: actions/setup-node@v4\n        with:\n          # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node\n          # Ref: https://github.com/actions/setup-node#supported-version-syntax\n          node-version: \"20\"\n      - name: Cache NPM dependencies\n        uses: actions/cache@v4\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Upload Pages artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./public\n  deploy:\n    needs: build\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n\n## 个性配置\n\n### 主题配置\n\n这里我选择的是 [hux](https://huangxuan.me/) 的主题，但它是用 [jekyll](https://jekyllrb.com/) 构建的。\n所以我们就在 Github 上找到了一个[把 hux 移植到 hexo 的主题](https://github.com/hhking/hexo-theme-huxo)。\n然后把这个仓库 fork 到自己的仓库里面做定制化。\n\n1. 为博客添加主题\n\n   ```bash\n   # 我把主题 fork 到了我自己的仓库 https://github.com/tobelight/hexo-theme-hux\n   # 添加主题到我的 blog 中\n   $ git submodule add  https://github.com/tobelight/hexo-theme-hux themes/hexo-theme-hux\n   ```\n\n2. 在 config 中修改主题。\n\n   ```yml _config.yml\n   theme: hexo-theme-hux\n   ```\n\n3. 添加 less-render\n\n   因为主题使用了 less 作为样式，所以需要添加依赖到 package.json 中。\n\n   ```json package.json\n   {\n     \"dependencies\": {\n       \"hexo-renderer-less\": \"^4.0.0\"\n     }\n   }\n   ```\n\n   ```bash\n   # 安装依赖\n   $ npm install\n   # 清理之前生成的资源\n   $ hexo clean\n   # 执行 server 以本地查看效果\n   $ hexo server\n   ```\n\n### 支持资源文件\n\n参考 [Hexo 资源文件夹配置文档](https://hexo.io/zh-cn/docs/asset-folders)\n\n```yml _config.yml\nmarked:\n  prependRoot: true\n  postAsset: true\n```\n\n### 生成 About 页面\n\n```bash\n# 生成 about 页面\n$ hexo new page about\n```\n\n默认生成的 `index.md` 文件中没有指定 `layout: about`, 需要手动添加，\n否则会导致 about 页面无法正常显示。\n\n### 添加评论功能\n\n参考 <https://giscus.app/zh-CN>\n按照流程生成脚本，然后添加到 theme 中。\n\n1. 在用户 Setting -> Application 中添加 giscus 应用，可指定权限\n2. 在仓库的 Setting 中，找到 Discussions 并进行勾选\n3. 在 [giscus](https://giscus.app/zh-CN) 页面中，获取最终脚本\n4. 依据需求把脚本添加到 theme 的对应位置上\n\n在这个页面上，任何人指定仓库就能获取到这段脚本，没有前置条件和权限控制。\n这会导致任何人都可以把这个脚本用在任何一个网站上。\n基于安全性考虑，我们还需要配置只有我们的网站才能使用这个脚本。\n\n参考 <https://github.com/giscus/giscus/blob/main/ADVANCED-USAGE.md>\n\n我们需要创建并配置 giscus.json 到仓库中，让 giscus 只允许我们配置的源使用。\n\n### 字数统计\n\n使用 <https://github.com/theme-next/hexo-symbols-count-time>\n\n1. 安装字数统计的依赖 `npm install hexo-symbols-count-time`\n2. 在 header 中添加以下脚本\n   `<%- symbolsCount(page) %> words, <%- symbolsTime(page) %>`\n\n## 问题排查\n\n乱七八糟的问题整合。\n\n### 部署 hexo 却出现 jekyll 错误\n\n参考 issues: <https://github.com/orgs/community/discussions/106846>\n参考 doc：<https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#static-site-generators>\n\n添加空文件 `.nojekyll` 到根目录。\n\n![Alt](build-error.jpg)\n\n### 配置支持资源文件时，markdown 语法没有生效\n\n参考 issues：<https://github.com/hexojs/hexo-renderer-marked/issues/281>\n\nhexo version: 7.2.0\nhexo-renderer-marked: 6.3.0\n\n目前 hexo-renderer-marked 没有成功支持 hexo `7.2.0`，需要降级到`7.1.1`。\n\n```json package.json\n{\n  \"hexo\": {\n    \"version\": \"7.1.1\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"7.1.1\"\n  }\n}\n```\n\n## 其他\n\n编写 Hexo Theme 需要的属性以及方法都在官方文档中。\n[支持的变量](https://hexo.io/zh-cn/docs/variables)\n[支持的函数](https://hexo.io/zh-cn/docs/helpers)\n","tags":["hexo"]},{"title":"X","url":"/favorites/index.html","content":"\n因为热爱，\n我把喜欢的东西杂糅到了一起，就变成了这样。\n\n博客的风格来自一名关注的[博主](https://pockies.github.io/about/)。\n因为我一点都不懂 Ruby，所以选择了用 nodejs 的 hexo 来搭建 blog，正巧 hexo 也有[移植的主题](https://github.com/hhking/hexo-theme-huxo)。\n\n想写博客的原因主要来源于下面三篇文章：\n\n（一）[如何超过大多数人](https://coolshell.cn/articles/19464.html)\n这一篇文章我读了很多遍，但是一直没有行动起来。[耗叔](https://coolshell.cn/haoel)就像我读初中时憧憬的陶渊明一样，是一名不为世俗所动的[居士](https://zh.wikipedia.org/zh-hans/%E5%B1%85%E5%A3%AB)，我很佩服他那[不为五斗米折腰](https://coolshell.cn/articles/17391.html)的信念。\n\n（二）[知识的缝隙](https://mp.weixin.qq.com/s/Nu16xFYIInSZN5hjW-avrw)\n这一篇文章是最近看的，主要举例使用[费曼学习法](https://en.wikipedia.org/wiki/Learning_by_teaching)。作为一个 [I 人](https://baike.baidu.com/item/i%E4%BA%BAe%E4%BA%BA/63015686)，做不到去教授，但至少做笔记写博文还是可以做到的。在这里所写的知识类博文都是为了让我能够更好的掌握知识，把知识转化为技能。\n\n（三）[万事留痕](https://www.xiaoyuzhoufm.com/episode/64ec642b80c9ec4c5f7bef2e)\n这是一篇播客，最后的「万事留痕」和我的信念不谋而合，为了不虚度我这短暂而又没有存在感的人生，也留一份数据人在互联网上可能会比较好吧 XD 当然我想留下很多我看过动漫，游戏的记录——它们覆盖了我的大部分人生却还什么都没留下过。\n\n---\n\n我的 ID `tobelight` 灵感来源于一首歌曲[『サーチライトと月灯り』](https://music.163.com/song?id=1308782735&userid=97053248)。\n当时我在大城市的公交车站，已是深夜，只有路灯和月光在这静谧的世界。也许只有努力的[主人公](https://zh.moegirl.org.cn/zh-tw/%E5%A4%A9%E6%9C%88%E7%9C%9F%E7%99%BD)们才能够看到这般美丽的景色，体会到这种感觉吧。\n\n至于博客`夜空的神秘`则是来自[某款游戏](https://www.dlsite.com/maniax/work/=/product_id/RJ280293.html)的一件装备。\n![夜空的神秘](images/夜空的神秘.jpg \"夜空的神秘\")\n![Boss战](images/boss.jpg)\n\n当然还有迫害[愚鸟渡渡](https://zh.moegirl.org.cn/zh-hans/%E6%B8%A1%E6%B8%A1)的[絶滅危惧種を食べよう！](https://twitter.com/toro_yori_ebi/status/1138014859511996418)。\n\n![絶滅危惧種を食べよう！](images/dodododododododo2.png)\n"},{"title":"太虚苍蓝闪","url":"/about/index.html","content":"\n我不理解自己，我只是把万物的色彩涂抹，看起来像是有了自我。\n\n但是我又[喜爱](/favorites)，某些事物令我开心。\n\n我便把它们涂抹到我的身上，涂抹到了这里。\n\n诉说着我的[喜爱](/favorites)。\n\n如果来介绍自己，那么内容就过于空虚；~所以[太虚苍蓝闪](https://zh.moegirl.org.cn/zh-hans/%E5%86%B0%E5%B7%9D%E9%95%9C%E5%8D%8E)~\n\n但是换成介绍这些[喜爱](/favorites)，[我可不困了啊](https://zh.moegirl.org.cn/zh-hans/%E4%BD%A0%E8%A6%81%E6%98%AF%E5%94%A0%E8%BF%99%E4%B8%AA%EF%BC%8C%E6%88%91%E5%8F%AF%E4%B8%8D%E5%9B%B0%E4%BA%86%E5%95%8A)。\n"}]